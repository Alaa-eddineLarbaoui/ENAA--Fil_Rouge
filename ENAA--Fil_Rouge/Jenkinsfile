pipeline {
    agent any

    tools {
      maven 'mvn'
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('docker-hub-credentiels')
        SONAR_TOKEN = credentials('sonartoken')
        SONARQUBE_SERVER = 'SonarServer'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                dir('ENAA--Fil_Rouge') {
                    bat 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Test') {
            steps {
                dir('ENAA--Fil_Rouge') {
                    bat 'mvn test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('ENAA--Fil_Rouge') {
                    withSonarQubeEnv('SonarServer') {
                        bat "mvn sonar:sonar -Dsonar.token=${SONAR_TOKEN}"
                    }
                }
            }
        }
        stage('Build Docker & Push') {
                            steps {

                                    script {
                                        def dockerImage = docker.build("alaaelarbaoui/doc_net:${env.TAG_VERSION ?: 'latest'}")
                                        docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                                            dockerImage.push()
                                        }
                                    }
                            }
                        }
                    }
                }

                stage('Deploy with Docker Compose') {
                    steps {
                        bat 'docker-compose up'
                    }
                }




}
